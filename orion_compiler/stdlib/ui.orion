// Orion Standard UI Library
// Version 0.2 (Rebuilt)
module ui;
use draw;

// A simple text label component.
component Label {
    x: 0;
    y: 0;
    text: "Label";
    color: "#000000";
    fontSize: 16;

    function render() {
        draw.text({
            x: this.x,
            y: this.y,
            text: this.text,
            color: this.color,
            fontSize: this.fontSize
        });
    }
}

// A stateful checkbox component.
component Checkbox {
    x: 0;
    y: 0;
    size: 20;
    width: 20;
    height: 20;
    label: "";
    onChange: nil; // Callback function: (new_state: bool) => void

    state: {
        "is_checked": false
    };

    function onClick() {
        this.state["is_checked"] = !(this.state["is_checked"]);
        if (!(this.onChange == nil)) {
            var callback = this.onChange;
            callback(this.state["is_checked"]);
        }
    }

    function render() {
        // Draw the main box
        draw.box({
            x: this.x,
            y: this.y,
            width: this.size,
            height: this.size,
            color: "#AAAAAA"
        });

        // Draw the checkmark if checked
        if (this.state["is_checked"]) {
            draw.box({
                x: this.x + 4,
                y: this.y + 4,
                width: this.size - 8,
                height: this.size - 8,
                color: "#3498DB"
            });
        }

        // Draw the label text
        if (!(this.label == "")) {
            draw.text({
                x: this.x + this.size + 10,
                y: this.y + (this.size / 2) + 6,
                text: this.label,
                color: "#000000",
                fontSize: 16
            });
        }
    }
}

// A simple button component.
component Button {
    x: 0;
    y: 0;
    width: 100;
    height: 40;
    text: "Button";
    color: "#DDDDDD";
    hover_color: "#EEEEEE";
    onClick: nil;

    state: {
        "is_hovering": false
    };

    function onMouseEnter() {
        this.state["is_hovering"] = true;
    }

    function onMouseLeave() {
        this.state["is_hovering"] = false;
    }

    function render() {
        var current_color = this.color;
        if (this.state["is_hovering"]) {
            current_color = this.hover_color;
        }

        // Draw the box for the button background
        draw.box({
            x: this.x,
            y: this.y,
            width: this.width,
            height: this.height,
            color: current_color
        });

        // Draw the text centered on the button
        var text_width = draw.measure_text(this.text, 16);
        var text_x = this.x + (this.width - text_width) / 2;
        var text_y = this.y + (this.height / 2) + 6; // Approximate vertical center

        draw.text({
            x: text_x,
            y: text_y,
            text: this.text,
            color: "#000000",
            fontSize: 16
        });
    }
}
